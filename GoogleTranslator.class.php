<?php

/**
 * GoogleTranslator for PHP - library for translating text via Google Translator API.
 *
 * @author     David Grudl
 * @copyright  Copyright (c) 2010 David Grudl
 * @license    New BSD License
 * @link       http://phpfashion.com/
 * @version    1.0
 */
class GoogleTranslator
{

	/** @var string  source lang */
	private $srcLang;

	/** @var string  destination lang */
	private $destLang;



	/**
	 * @param  string   source language (optional)
	 * @param  string   destination language
	 */
	public function __construct($srcLang, $destLang)
	{
		$this->srcLang = $srcLang;
		$this->destLang = $destLang;
	}



	/**
	 * Translates text.
	 * @param  string
	 * @return string
	 * @throws GoogleTranslatorException
	 */
	public function translate($text)
	{
		$curl = curl_init();
		curl_setopt($curl, CURLOPT_URL, 'http://ajax.googleapis.com/ajax/services/language/translate');
		curl_setopt($curl, CURLOPT_HEADER, FALSE);
		curl_setopt($curl, CURLOPT_TIMEOUT, 20);
		curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE); // no echo, just return result
		curl_setopt($curl, CURLOPT_POSTFIELDS, array(
			'v' => '1.0',
			'langpair' => "$this->srcLang|$this->destLang",
			'q' => (string) $text
		));

		$result = curl_exec($curl);
		if (curl_errno($curl)) {
			throw new GoogleTranslatorException('Server error: ' . curl_error($curl));
		}

		$code = curl_getinfo($curl, CURLINFO_HTTP_CODE);
		if ($code != 200) {
			throw new GoogleTranslatorException("Server error #$code", $code);
		}

		$json = @json_decode($result); // intentionally @
		if (!isset($json->responseData->translatedText)) {
			throw new GoogleTranslatorException('Invalid server response');
		}

		return $json->responseData->translatedText;
	}

}



/**
 * An exception generated by GoogleTranslator.
 */
class GoogleTranslatorException extends Exception
{
}